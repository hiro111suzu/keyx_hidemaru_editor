#time_start = tickcount;
$fn_ini = currentmacrodirectory + "\\keyx.ini";
debuginfo getininum( $fn_ini, "config", "debuginfo" );
//$info_msg = "";
$statusbar_txt = "[keyx]";

//. キー調査
$mod = "";
if ( iskeydown( 0x10 ) ) $mod = $mod + "Shift+";
if ( iskeydown( 0x12 ) ) $mod = $mod + "Alt+";
if ( iskeydown( 0x11 ) ) $mod = $mod + "Ctrl+";
$key = "?";

//- shirt, ctrl, alt
#ng[0x10] = 1;
#ng[0x11] = 1;
#ng[0x12] = 1;
//	#ng[0x13] = 1; //- なぜだか押されたことになるPCがある
#ng[0xa0] = 1;
#ng[0xa1] = 1;
#ng[0xa2] = 1;
#ng[0xa3] = 1;
#ng[0xa4] = 1;
#ng[0xa5] = 1;

#ng[19] = 1; //- なぜだか押されたことになるときがある

#num = 1;
while ( #num < 230 ) {
	if ( iskeydown( #num ) && (! #ng[ #num ]) ) break;
	#num = #num + 1;
}
$key = str( #num );
call split getinistr( $fn_ini, "code2key", $key ), "\t";
if ( $split_l != "" )
	$key = $split_l;
call time_log "key";

//. 呼び出したプログラム
$win_type = "editor";
if ( (platform & 0x00800000) != 0 ) {
	loaddll "TKInfo.dll";
	if( dllfunc( "IsHidemaruMailMain" ) || dllfunc( "IsHidemaruMailGrep" ) )
		$win_type = "mail_main";
	else
		$win_type = "mail_editor";
}
//call dbginfo $win_type;
call time_log "win";

//. 実行
$arg = getarg(0);
if ( $arg != "" ) {
	$key = leftstr( $arg, strlen( $arg ) - 4 );
} else {
	$key = $mod + $key;
}

$cmd = getinistr( $fn_ini, $win_type, $key );

if ( $cmd == "" ) {
	$cmd = getinistr( $fn_ini, "all", $key );
	if ( $cmd == "" ) {
		call dbginfo $key + ": コマンド未登録";
//		message "キー: " + $key + "\nコマンド未登録です", $title_mac;
		endmacro;
	}
}
call dbginfo $key + ": " + $cmd;

//.. コマンド解釈
call split $cmd, " ";
$alias = getinistr( $fn_ini, "alias_head", leftstr( $cmd, 1 ) );
if ( $alias != "" ) {
	$split_l = $alias;
	$split_r = midstr( $cmd, 1 );
} else if ( rightstr( $split_l, 4 ) == ".mac" ) {
	if ( existfile( $split_l ) ) {
		$split_l = "mac";
		$split_r = $cmd;
	} else if ( existfile( macrodir + "\\" + $split_l ) ) {
		$split_l = "mac";
		$split_r = macrodir + "\\" + $cmd;
	}
} else if ( leftstr( $cmd, 8 ) == "https://" || existfile( $cmd ) ) {
	$split_l = "run";
	$split_r = $cmd;
}
call dbginfo $split_l + " " + $split_r;
call time_log "command";

//.. コマンド実行
//title "keyx" + $info_msg, 1;

if ( $split_l == "cmd" ) {
	call dbginfo "マクロコマンド実行";
	eval( $split_r );
} else if ( $split_l == "mac" ) {
	call dbginfo "マクロ実行";
	// マクロファイル名と引数文字列を分割
	call split $split_r, ".mac ";
	if ( $split_r == "" )
		execmacro $split_l;
	else
		execmacro $split_l + ".mac", $split_r;
} else if ( $split_l == "run" ) {
	call dbginfo "openbyshell 実行";
	openbyshell $split_r;
} else {
	call dbginfo "cmdpに渡す";
	execmacro macrodir + "\\" + getinistr( $fn_ini, "config", "cmdp_path" ), $cmd;
}
endmacro;

//. サブルーチン
//.. dbginfo
dbginfo:
	$statusbar_txt = $statusbar_txt + " " + $$1;
	title $statusbar_txt, 1;
	title -1, 1;

//	$info_msg = $info_msg + "/" + $$1;
	debuginfo "[keyx] " + $$1 + "\x0A";
return;

//.. time_log
time_log:
//	debuginfo "[keyx] " + str( tickcount - #time_start ) + " msec, " + $$1 + "\x0A";
return;

//.. split: 文字列分割
//- $$1 heystac, $$2 needle
split:
	##num = strstr( $$1, $$2 );
	if ( ##num == -1 ) {
		$split_l = $$1;
		$split_r = "";
		return;
	}
	$split_l = leftstr( $$1, ##num );
	$split_r = midstr( $$1, ##num + strlen( $$2 ) );
return;
